version: '3.8'

services:
  # MCDN Application
  mcdn:
    build:
      context: .
      target: production
    container_name: mcdn-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      # Server Configuration
      NODE_ENV: production
      PORT: 3000
      HOST: 0.0.0.0
      LOG_LEVEL: info

      # S3/MinIO Configuration
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-minioadmin}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-minioadmin}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-vod-archive}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-true}
      S3_USE_SSL: ${S3_USE_SSL:-false}

      # Cache Configuration
      CACHE_MODE: ${CACHE_MODE:-redis-cassandra}
      CACHE_TTL: ${CACHE_TTL:-300}
      CACHE_MAX_ITEMS: ${CACHE_MAX_ITEMS:-1000}
      CACHE_MAX_SIZE: ${CACHE_MAX_SIZE:-104857600}

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      REDIS_DB: ${REDIS_DB:-0}
      REDIS_KEY_PREFIX: ${REDIS_KEY_PREFIX:-mcdn:}

      # Cassandra Configuration
      CASSANDRA_HOSTS: cassandra:9042
      CASSANDRA_KEYSPACE: ${CASSANDRA_KEYSPACE:-mcdn}
      CASSANDRA_USERNAME: ${CASSANDRA_USERNAME:-}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD:-}
      CASSANDRA_LOCAL_DATA_CENTER: ${CASSANDRA_LOCAL_DATA_CENTER:-datacenter1}
    depends_on:
      redis:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./cache:/app/cache
      - ./logs:/app/logs
    networks:
      - mcdn-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/proxy/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: mcdn-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru --save 60 1000
    volumes:
      - redis-data:/data
    networks:
      - mcdn-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Cassandra Database
  cassandra:
    image: cassandra:4.1
    container_name: mcdn-cassandra
    restart: unless-stopped
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_CLUSTER_NAME: mcdn-cluster
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128
      MAX_HEAP_SIZE: 512M
      HEAP_NEWSIZE: 100M
    volumes:
      - cassandra-data:/var/lib/cassandra
    networks:
      - mcdn-network
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "SELECT now() FROM system.local"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # MinIO S3 Storage (for testing)
  minio:
    image: minio/minio:latest
    container_name: mcdn-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY_ID:-minioadmin}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_ACCESS_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - mcdn-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mcdn-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - mcdn-network
    profiles:
      - tools

  # Cassandra Web (Cassandra GUI)
  cassandra-web:
    image: delermando/cassandra-web:latest
    container_name: mcdn-cassandra-web
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      CASSANDRA_HOST: cassandra
      CASSANDRA_PORT: 9042
      CASSANDRA_USER: ${CASSANDRA_USERNAME:-}
      CASSANDRA_PASSWORD: ${CASSANDRA_PASSWORD:-}
    depends_on:
      - cassandra
    networks:
      - mcdn-network
    profiles:
      - tools

volumes:
  redis-data:
    driver: local
  cassandra-data:
    driver: local
  minio-data:
    driver: local

networks:
  mcdn-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16